{"version":3,"sources":["i18n.ts","redux-saga/actions/userActions.ts","redux-saga/reducers/userReducer.ts","redux-saga/actions/questionsActions.ts","redux-saga/reducers/questionsReducer.ts","redux-saga/actions/multfilmsActions.ts","redux-saga/reducers/multfilmsReducer.ts","redux-saga/actions/viewedActions.ts","redux-saga/reducers/viewedReducer.ts","redux-saga/reducers/rootReducer.ts","redux-saga/sagas/userSagas.ts","redux-saga/sagas/questionsSagas.ts","redux-saga/sagas/multfilmsSagas.ts","redux-saga/sagas/viewedSagas.ts","redux-saga/sagas/rootSaga.ts","redux-saga/store/index.ts","components/Header/pagesList.ts","redux-saga/selectors/userSelector.ts","components/Header/Logo/index.tsx","components/validate/authValidate.tsx","components/Header/Authorization/index.tsx","components/Header/index.tsx","components/pages/Main/index.tsx","components/Basement/index.tsx","redux-saga/selectors/multfilmsSelector.ts","redux-saga/selectors/questionsSelector.ts","components/pages/Progres/Test/index.tsx","components/pages/Progres/Multfilms/MultfilmBlock/index.tsx","components/pages/Progres/Multfilms/index.tsx","components/pages/Progres/index.tsx","components/pages/AboutProject/index.tsx","components/pages/Setting/index.tsx","components/GreetNew/index.tsx","components/pages/Progres/Multfilms/Multfilm/index.tsx","App.tsx","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","USER_AUTH","USER_AUTH_REQUARE","USER_AUTH_FAILURE","USER_DEAUTH","USER_TESTING","USER_TESTING_REQUARE","userRequare","payload","type","userAuthFailure","initialState","error","pending","id","name","image","test_passed","involvement","userReducer","state","action","features","QUESTIONS_TAKE_REQUEST","QUESTIONS_TAKE","QUESTIONS_TAKE_FAILURE","questionsTakeFailure","questions","questionsReducer","MULTFILM_TAKE","MULTFILM_FAILURE","MULTFILM_TAKE_REQUARE","multfilmsFailure","multfilms","commonMults","uncommonMults","rareMults","multfilmsReducer","VIEWED_SAVE","VIEWED_FAILURE","VIEWED_SAVE_REQUEST","viewedReducer","rootReducer","combineReducers","user","viewed","authSaga","deuthSaga","testingSaga","userSagas","put","message","console","log","userId","acceptAnswer","axios","call","all","takeLatest","takeEvery","questionsSelectSaga","questionsSagas","shuffler","array","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","getQuestions","get","params","level","topic","response","data","map","question","answers","answer","blende1","blende2","multfilmTakeSaga","multfilmsSagas","viewedSaveSaga","viewedSagas","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","pagesList","access","link","getAccountSelector","createSelector","info","getAccountIdSelector","getAccountPendingSelector","Logo","to","className","xmlns","viewBox","fill","d","validateName","value","test","validateLogin","validatePassword","GlobalAuth","prop","useState","authVariant","typeForm","setTypeForm","dispatch","useDispatch","t","useTranslation","authentication","dates","a","body","login","password","fetch","method","headers","JSON","stringify","json","jsonData","infoTaked","acsessToken","authClose","onOutsideClick","onClick","tabIndex","role","initialValues","localStorage","getItem","onSubmit","values","errors","touched","validate","Header","langDisplay","setLangDisplay","setAuthVariant","token","setToken","menuVisible","setMenuVisible","authInfo","useSelector","langs","en","img","ru","authVerif","authorization","useEffect","Authorization","tokenAc","setItem","src","classNames","button","alt","Object","keys","lang","changeLanguage","removeItem","Main","Basement","getMultfilmsSelector","getMultfilmsPendingSelector","getQuestionsSelector","Test","counter","setCounter","setAnswers","userAnswer","setUserAnswer","e","preventDefault","multfilm","submitQuestion","process","MultfilmBlock","props","viewedChange","style","animationDelay","delay","watched","logo","Multfilms","push","category","index","Progres","pendingAccount","pendingMultfilms","getInfo","AboutProject","Setting","GreetNew","text","select","choose","changeVisiter","Multfilm","App","visiter","setVisiter","exact","path","component","ReactDOM","render","fallback","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6d674a77.chunk.js","sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    debug: true,\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n\r\n  });\r\n\r\nexport default i18n;","import {\r\n  UserAuth,\r\n  UserAuthFailure,\r\n  UserInfo,\r\n  UserDeauth,\r\n  UserTesting,\r\n  UserTestingRequare,\r\n  UserAuthRequare,\r\n  UserAnswer,\r\n  Answer,\r\n} from '../types/userTypes';\r\n\r\nexport const USER_AUTH = 'USER_AUTH';\r\nexport const USER_AUTH_REQUARE = 'USER_AUTH_REQUARE';\r\nexport const USER_AUTH_FAILURE = 'USER_AUTH_FAILURE';\r\nexport const USER_DEAUTH = 'USER_DEAUTH';\r\nexport const USER_TESTING = 'USER_TESTING';\r\nexport const USER_TESTING_REQUARE = 'USER_TESTING_REQUARE';\r\n\r\n\r\nexport const userAuth = (\r\n  payload: UserInfo,\r\n): UserAuth => ({\r\n  type: USER_AUTH,\r\n  payload,\r\n});\r\n\r\nexport const userRequare = (\r\n  payload: UserInfo,\r\n): UserAuthRequare => ({\r\n  type: USER_AUTH_REQUARE,\r\n  payload,\r\n});\r\n\r\nexport const userAuthFailure = (\r\n  payload: {error: boolean},\r\n): UserAuthFailure => ({\r\n  type: USER_AUTH_FAILURE,\r\n  payload,\r\n});\r\n\r\nexport const userDeauth = (): UserDeauth => ({\r\n  type: USER_DEAUTH,\r\n});\r\n\r\nexport const userTesting = (\r\n  payload: Answer,\r\n): UserTesting => ({\r\n  type: USER_TESTING,\r\n  payload,\r\n});\r\n\r\nexport const userTestingRequare = (\r\n  payload: UserAnswer,\r\n): UserTestingRequare => ({\r\n  type: USER_TESTING_REQUARE,\r\n  payload,\r\n});","import { Reducer } from 'redux';\r\n\r\nimport {\r\n  USER_AUTH,\r\n  USER_AUTH_FAILURE,\r\n  USER_DEAUTH,\r\n  USER_AUTH_REQUARE,\r\n  USER_TESTING,\r\n  USER_TESTING_REQUARE,\r\n} from '../actions/userActions';\r\n\r\nimport { UserAuthActions, UserInfo } from '../types/userTypes';\r\n\r\ninterface InitialState extends UserInfo {\r\n  error: boolean,\r\n  pending: boolean,\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  error: false,\r\n  pending: false,\r\n  id: 0,\r\n  name: '',\r\n  image: '',\r\n  test_passed: false,\r\n  involvement: '',\r\n};\r\n\r\nconst userReducer: Reducer<InitialState, UserAuthActions> = (\r\n  state = initialState,\r\n  action: UserAuthActions,\r\n) => {\r\n  switch (action.type) {\r\n    case USER_AUTH_REQUARE:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n\r\n    case USER_AUTH:\r\n      return {\r\n        ...state,\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        image: action.payload.image,\r\n        test_passed: action.payload.test_passed,\r\n        involvement: action.payload.involvement,\r\n        pending: false,\r\n      };\r\n\r\n    case USER_AUTH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case USER_DEAUTH:\r\n      return {\r\n        ...state,\r\n        id: 0,\r\n        name: '',\r\n        image: '',\r\n        features: [],\r\n        test_passed: false,\r\n        involvement: '',\r\n      };\r\n\r\n    case USER_TESTING:\r\n      return {\r\n        ...state,\r\n        test_passed: true,\r\n        features: action.payload.features,\r\n        pending: false,\r\n      };\r\n\r\n    case USER_TESTING_REQUARE:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n      \r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default userReducer;","import {\r\n  QuestionsTakeRequest,\r\n  QuestionsTake,\r\n  QuestionsTakeFailure,\r\n  Questions,\r\n  QuestionsTopic,\r\n} from '../types/questionsTypes';\r\n\r\nexport const QUESTIONS_TAKE_REQUEST = 'QUESTIONS_TAKE_REQUEST';\r\nexport const QUESTIONS_TAKE = 'QUESTIONS_TAKE';\r\nexport const QUESTIONS_TAKE_FAILURE = 'QUESTIONS_TAKE_FAILURE';\r\n\r\nexport const ANSWER_TAKE = 'ANSWER_TAKE';\r\nexport const ANSWER_TAKE_REQUEST = 'ANSWER_TAKE_REQUEST';\r\nexport const ANSWER_TAKE_FAILURE = 'ANSWER_TAKE_FAILURE';\r\n\r\nexport const questionsTakeRequest = (\r\n  payload: QuestionsTopic,\r\n): QuestionsTakeRequest => ({\r\n  type: QUESTIONS_TAKE_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport const questionsTake = (\r\n  payload: Questions,\r\n): QuestionsTake => ({\r\n  type: QUESTIONS_TAKE,\r\n  payload,\r\n});\r\n\r\nexport const questionsTakeFailure = (\r\n  payload: {error: boolean},\r\n): QuestionsTakeFailure => ({\r\n  type: QUESTIONS_TAKE_FAILURE,\r\n  payload,\r\n});","import { Reducer } from 'redux';\r\n\r\nimport {\r\n  QUESTIONS_TAKE,\r\n  QUESTIONS_TAKE_FAILURE,\r\n  QUESTIONS_TAKE_REQUEST,\r\n} from '../actions/questionsActions';\r\n\r\nimport { Questions, QuestionsActions } from '../types/questionsTypes';\r\n\r\ninterface InitialState extends Questions {\r\n  error: boolean,\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  questions: [],\r\n  error: false,\r\n};\r\n\r\nconst questionsReducer: Reducer<InitialState, QuestionsActions> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case QUESTIONS_TAKE_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case QUESTIONS_TAKE:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        questions: action.payload.questions,\r\n      };\r\n\r\n    case QUESTIONS_TAKE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default questionsReducer;","import {\r\n  MultfilmTake,\r\n  MultfilmFailure,\r\n  MultfilmTakeRequare,\r\n  Multfilms,\r\n  Id,\r\n} from '../types/multfilmsTypes';\r\n\r\nexport const MULTFILM_TAKE = 'MULTFILM_TAKE';\r\nexport const MULTFILM_FAILURE = 'MULTFILM_FAILURE';\r\nexport const MULTFILM_TAKE_REQUARE = 'MULTFILM_TAKE_REQUARE';\r\n\r\nexport const multfilmsTake = (\r\n  payload: Multfilms,\r\n): MultfilmTake => ({\r\n  type: MULTFILM_TAKE,\r\n  payload,\r\n});\r\n\r\nexport const multfilmTakeRequare = (\r\n  payload: Id,\r\n): MultfilmTakeRequare => ({\r\n  type: MULTFILM_TAKE_REQUARE,\r\n  payload,\r\n});\r\n\r\nexport const multfilmsFailure = (\r\n  payload: {error: boolean},\r\n): MultfilmFailure => ({\r\n  type: MULTFILM_FAILURE,\r\n  payload,\r\n});","import { Reducer } from 'redux';\r\n\r\nimport {\r\n  MULTFILM_TAKE,\r\n  MULTFILM_FAILURE,\r\n  MULTFILM_TAKE_REQUARE,\r\n} from '../actions/multfilmsActions';\r\n\r\nimport { MultfilmsActions, Multfilms } from '../types/multfilmsTypes';\r\n\r\ninterface InitialState extends Multfilms {\r\n  error: boolean,\r\n  pending: boolean,\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  error: false,\r\n  pending: false,\r\n  multfilms: {\r\n    commonMults: [],\r\n    uncommonMults: [],\r\n    rareMults: [],\r\n  },\r\n};\r\n\r\nconst multfilmsReducer: Reducer<InitialState, MultfilmsActions> = (\r\n  state = initialState,\r\n  action: MultfilmsActions,\r\n) => {\r\n  switch (action.type) {\r\n    case MULTFILM_TAKE_REQUARE:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case MULTFILM_TAKE:\r\n      return {\r\n        ...state,\r\n        multfilms: action.payload.multfilms,\r\n        pending: false,\r\n      };\r\n    case MULTFILM_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default multfilmsReducer;","import {\r\n  Viewed,\r\n  ViewedSaveRequest,\r\n  ViewedSave,\r\n  ViewedFailure,\r\n} from '../types/viewedTypes';\r\n\r\nexport const VIEWED_SAVE = 'VIEWED_TAKE';\r\nexport const VIEWED_FAILURE = 'VIEWED_FAILURE';\r\nexport const VIEWED_SAVE_REQUEST = 'VIEWED_SAVE_REQUEST';\r\n\r\nexport const viewedSave = (): ViewedSave => ({\r\n  type: VIEWED_SAVE,\r\n});\r\n\r\nexport const viewedSaveRequest = (\r\n  payload: Viewed,\r\n): ViewedSaveRequest => ({\r\n  type: VIEWED_SAVE_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport const viewedFailure = (\r\n  payload: {error: boolean},\r\n): ViewedFailure => ({\r\n  type: VIEWED_FAILURE,\r\n  payload,\r\n});","import { Reducer } from 'redux';\r\n\r\nimport {\r\n  VIEWED_SAVE,\r\n  VIEWED_SAVE_REQUEST,\r\n  VIEWED_FAILURE,\r\n} from '../actions/viewedActions';\r\n\r\nimport { ViewedActions } from '../types/viewedTypes';\r\n\r\ninterface InitialState {\r\n  error: boolean,\r\n  pending: boolean,\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  error: false,\r\n  pending: false,\r\n};\r\n\r\nconst viewedReducer: Reducer<InitialState, ViewedActions> = (\r\n  state = initialState,\r\n  action: ViewedActions,\r\n) => {\r\n  switch (action.type) {\r\n    case VIEWED_SAVE_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case VIEWED_SAVE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n      };\r\n\r\n    case VIEWED_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default viewedReducer;","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport questionsReducer from './questionsReducer';\r\nimport multfilmsReducer from './multfilmsReducer';\r\nimport viewedReducer from './viewedReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  questions: questionsReducer,\r\n  multfilms: multfilmsReducer,\r\n  viewed: viewedReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;","import {\r\n  all,\r\n  put,\r\n  call,\r\n  takeEvery,\r\n  takeLatest,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  USER_DEAUTH,\r\n  userAuthFailure,\r\n  USER_AUTH_REQUARE,\r\n  userAuth,\r\n  USER_TESTING_REQUARE,\r\n  userTesting\r\n} from '../actions/userActions';\r\nimport { UserAuth, UserTestingRequare } from '../types/userTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nfunction* authSaga(action: UserAuth) {\r\n  try {\r\n    yield put(userAuth(action.payload));\r\n  } catch (e: any) {\r\n    yield put(\r\n      userAuthFailure({\r\n        error: e.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* deuthSaga() {\r\n  try {\r\n    console.log('you deauthorizated');\r\n  } catch (e: any) {\r\n    yield put(\r\n      userAuthFailure({\r\n        error: e.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* testingSaga(action: UserTestingRequare) {\r\n  try {;\r\n    const { features, userId } = action.payload;\r\n    const acceptAnswer = () => axios.put<string[]>(`http://localhost:5000/watched/tested/${userId}`,\r\n      { features });\r\n    yield call(acceptAnswer);\r\n    yield put(userTesting({ features }));\r\n  } catch (e: any) {\r\n    yield put(\r\n      userAuthFailure({\r\n        error: e.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* userSagas() {\r\n  yield all([takeLatest(USER_AUTH_REQUARE, authSaga), takeEvery(USER_DEAUTH, deuthSaga), takeLatest(USER_TESTING_REQUARE, testingSaga)]);\r\n}\r\n\r\nexport default userSagas;","import axios, { AxiosResponse } from 'axios';\r\nimport {\r\n  all,\r\n  put,\r\n  call,\r\n  takeLatest,\r\n} from 'redux-saga/effects';6\r\nimport { QuestionTake, QuestionsTakeRequest } from '../types/questionsTypes';\r\nimport {\r\n  QUESTIONS_TAKE_REQUEST,\r\n  questionsTake,\r\n  questionsTakeFailure,\r\n} from '../actions/questionsActions';\r\n\r\nconst shuffler = (array:string[]) => {\r\n  let currentIndex = array.length;\r\n\r\n  while (0 !== currentIndex) {\r\n    let randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    let temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nfunction* questionsSelectSaga(action: QuestionsTakeRequest) {\r\n  try {\r\n    const getQuestions = () => axios.get<QuestionTake[]>('http://localhost:5000/questions/take/', {\r\n      params: {\r\n        level: action.payload.level,\r\n        topic: action.payload.topic\r\n      }\r\n    });\r\n    const response: AxiosResponse<QuestionTake[]> = yield call(getQuestions);\r\n    response.data.map(question => (\r\n      question.answers = shuffler(\r\n        [\r\n          question.answer,\r\n          question.blende1,\r\n          question.blende2,\r\n        ]\r\n      )\r\n    ));\r\n    yield put(questionsTake({ questions: response.data }));\r\n  } catch (e: any) {\r\n    yield put(\r\n      questionsTakeFailure({\r\n        error: e.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* questionsSagas() {\r\n  yield all([takeLatest(QUESTIONS_TAKE_REQUEST, questionsSelectSaga)]);\r\n}\r\n\r\nexport default questionsSagas;","import {\r\n  all,\r\n  put,\r\n  call,\r\n  takeLatest,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  MULTFILM_TAKE_REQUARE,\r\n  multfilmsTake,\r\n  multfilmsFailure,\r\n} from '../actions/multfilmsActions';\r\nimport { MultfilmList, MultfilmTakeRequare } from '../types/multfilmsTypes'\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\nfunction* multfilmTakeSaga(action: MultfilmTakeRequare) {\r\n  try {\r\n    const getQuestions = () => axios.get(`http://localhost:5000/multfilms/${action.payload.id}`);\r\n    const response: AxiosResponse<MultfilmList> = yield call(getQuestions);\r\n    yield put(multfilmsTake({multfilms: response.data}));\r\n  } catch (e: any) {\r\n    yield put(\r\n      multfilmsFailure({\r\n        error: e.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* multfilmsSagas() {\r\n  yield all([takeLatest(MULTFILM_TAKE_REQUARE, multfilmTakeSaga)]);\r\n}\r\n\r\nexport default multfilmsSagas;","import {\r\n  all,\r\n  put,\r\n  takeLatest,\r\n} from 'redux-saga/effects';\r\nimport {\r\n  VIEWED_SAVE_REQUEST,\r\n  viewedFailure,\r\n  viewedSave\r\n} from '../actions/viewedActions';\r\nimport { ViewedSaveRequest } from '../types/viewedTypes'\r\nimport axios from 'axios';\r\n\r\nfunction* viewedSaveSaga(action: ViewedSaveRequest) {\r\n  try {\r\n    const viewed = action.payload.viewed\r\n    yield axios.put<string[]>(`http://localhost:5000/watched/viewed/${action.payload.userId}`,\r\n    { viewed });\r\n    yield put(viewedSave());\r\n  } catch (e: any) {\r\n    yield put(\r\n      viewedFailure({\r\n        error: e.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* viewedSagas() {\r\n  yield all([takeLatest(VIEWED_SAVE_REQUEST, viewedSaveSaga)]);\r\n}\r\n\r\nexport default viewedSagas;","import { all, fork } from 'redux-saga/effects';\r\n\r\nimport userSagas from './userSagas';\r\nimport questionsSagas from './questionsSagas';\r\nimport multfilmsSagas from './multfilmsSagas';\r\nimport viewedSagas from './viewedSagas';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(userSagas),\r\n    fork(questionsSagas),\r\n    fork(multfilmsSagas),\r\n    fork(viewedSagas)\r\n  ]);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from '../reducers/rootReducer';\r\nimport rootSaga from '../sagas/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","interface PagesList {\r\n  access: string,\r\n  name: string,\r\n  link: string,\r\n}\r\n\r\nconst pagesList:PagesList[] = [\r\n  {\r\n    access: 'close',\r\n    name: 'Progres',\r\n    link: '/progres'\r\n  },\r\n  {\r\n    access: 'free',\r\n    name: 'About project',\r\n    link: '/aboutproject'\r\n  },\r\n  {\r\n    access: 'free',\r\n    name: 'Setting',\r\n    link: '/setting'\r\n  },\r\n]\r\n\r\nexport default pagesList","import { createSelector } from 'reselect';\r\nimport { AppState } from '../reducers/rootReducer';\r\n\r\nconst getAccount = (state: AppState) => state.user;\r\nconst getError = (state: AppState) => state.user;\r\nconst getId = (state: AppState) => state.user.id;\r\nconst getPending = (state: AppState) => state.user.pending;\r\n\r\nexport const getAccountSelector = createSelector(getAccount, (info) => info);\r\nexport const getAccountErrorSelector = createSelector(getError, (error) => error);\r\nexport const getAccountIdSelector = createSelector(getId, (id) => id);\r\nexport const getAccountPendingSelector = createSelector(getPending, (pending) => pending);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <Link to=\"/\">\r\n      <div className=\"logo\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 283.46 283.46\">\r\n          <g fill=\"#FFFFFF\">\r\n            <path d=\"M129.19,139.91c-0.95-17.86-2.09-39.33-1.9-55.29h-0.57c-4.37,15.01-9.69,30.97-16.15,48.64l-22.61,62.13H75.42\r\n              L54.71,134.4c-6.08-18.05-11.21-34.58-14.82-49.78h-0.38c-0.38,15.96-1.33,37.43-2.47,56.62l-3.42,54.91H17.85l8.93-128.06h21.09\r\n              l21.85,61.94c5.32,15.77,9.69,29.83,12.92,43.13h0.57c3.23-12.92,7.79-26.98,13.49-43.13l22.8-61.94h21.09l7.98,128.06h-16.15\r\n              L129.19,139.91z\"\r\n            />\r\n            <path d=\"M148.01,68.09v53.58h61.94V68.09h16.72v128.06h-16.72v-60.04h-61.94v60.04h-16.53V68.09H148.01z\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </Link>\r\n  )\r\n};\r\n\r\nexport default Logo;","export const validateName = (value: string) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Required';\r\n  } else if (!/^[A-Z._%+-]{3,14}$/i.test(value)) {\r\n    error = 'Invalide name';\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const validateLogin = (value: string) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]{6,14}$/i.test(value)) {\r\n    error = 'Invalid login';\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const validatePassword = (value: string) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]{6,14}$/i.test(value)) {\r\n    error = 'Invalid password';\r\n  }\r\n  return error;\r\n};","import React, { useState } from 'react';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport { validateName, validateLogin, validatePassword } from '../../validate/authValidate';\r\nimport { userRequare } from '../../../redux-saga/actions/userActions';\r\n\r\ninterface AcDate {\r\n  name: string,\r\n  login: string,\r\n  password: string,\r\n  involvement: string\r\n}\r\n\r\nconst GlobalAuth = ({ ...prop }) => {\r\n  const [typeForm, setTypeForm] = useState(prop.authVariant);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const authentication = async (dates: AcDate) => {\r\n    try {\r\n      const body = {\r\n        name: dates.name,\r\n        login: dates.login,\r\n        password: dates.password,\r\n        involvement: dates.involvement,\r\n      };\r\n      const response = await fetch(`http://localhost:5000/accounts/${typeForm}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const jsonData = await response.json();\r\n      if (typeof jsonData !== 'string') {\r\n        prop.infoTaked(jsonData.acsessToken);\r\n        dispatch(userRequare({ ...jsonData }));\r\n        prop.authClose();\r\n      }\r\n    } catch (err: any) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <OutsideClickHandler onOutsideClick={() => prop.authClose()}>\r\n        {\r\n          (typeForm === 'something'\r\n            && (\r\n            <div className=\"auth_form\">\r\n              <div\r\n                onClick={() => (setTypeForm('login'))}\r\n                tabIndex={-1}\r\n                role=\"button\"\r\n                className=\"auth_button\"\r\n              >\r\n                {t('head.buttons.login')}\r\n              </div>\r\n              <div\r\n                onClick={() => (setTypeForm('registration'))}\r\n                tabIndex={-2}\r\n                role=\"button\"\r\n                className=\"auth_button\"\r\n              >\r\n                {t('head.buttons.registration')}\r\n              </div>\r\n            </div>\r\n            )) || (\r\n            <Formik\r\n              initialValues={{\r\n                name: '',\r\n                login: '',\r\n                password: '',\r\n                involvement: localStorage.getItem('involvement') || 'I don`t now',\r\n              }}\r\n              onSubmit={(values) => {\r\n                authentication(values);\r\n              }}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"auth_form\">\r\n                  <span>{t(`head.buttons.${typeForm}`)}</span>\r\n                  <div className=\"auth_inputs\">\r\n                    {(typeForm === 'registration'\r\n                    ) && (\r\n                      <>\r\n                        <p className=\"auth_button\">Name</p>\r\n                        <Field name=\"name\" validate={validateName} />\r\n                        {errors.name && touched.name && <div>{errors.name}</div>}\r\n                      </>\r\n                    )}\r\n                    <p className=\"auth_button\">Login</p>\r\n                    <Field name=\"login\" validate={validateLogin} />\r\n                    {errors.login && touched.login && <div>{errors.login}</div>}\r\n\r\n                    <p className=\"auth_button\">Password</p>\r\n                    <Field name=\"password\" validate={validatePassword} />\r\n                    {errors.password && touched.password && <div>{errors.password}</div>}\r\n                  </div>\r\n                  <button type=\"submit\">Submit</button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )\r\n        }\r\n      </OutsideClickHandler>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalAuth;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport pagesList from './pagesList';\r\nimport { userRequare, userDeauth } from '../../redux-saga/actions/userActions';\r\nimport { getAccountSelector } from '../../redux-saga/selectors/userSelector';\r\nimport { multfilmTakeRequare } from '../../redux-saga/actions/multfilmsActions';\r\nimport Logo from './Logo';\r\nimport Authorization from './Authorization';\r\nimport './style.css';\r\nimport classNames from 'classnames';\r\n\r\ninterface Lang {\r\n  img: string\r\n}\r\n\r\nconst Header = () => {\r\n  const [langDisplay, setLangDisplay] = useState(false);\r\n  const [authVariant, setAuthVariant] = useState('');\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const authInfo = useSelector(getAccountSelector);\r\n  const langs: {[lang: string]: Lang} = {\r\n    en: { img: 'https://upload.wikimedia.org/wikipedia/en/thumb/a/ae/Flag_of_the_United_Kingdom.svg/1920px-Flag_of_the_United_Kingdom.svg.png' },\r\n    ru: { img: 'https://upload.wikimedia.org/wikipedia/commons/d/d4/Flag_of_Russia.png' },\r\n  };\r\n\r\n  const authVerif = async () => {\r\n    if (token && !authInfo.name) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/accounts/auth/token', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const jsonData = await response.json();\r\n        dispatch(userRequare({ ...jsonData }));\r\n      } catch (err: any) {\r\n        console.error(err.message);\r\n      }\r\n    }\r\n    if (authInfo.test_passed) {\r\n      dispatch(multfilmTakeRequare({ id: authInfo.id }));\r\n    }\r\n  };\r\n\r\n  const infoTaked = (tokenAc: string) => {\r\n    localStorage.setItem('token', tokenAc);\r\n    setToken(tokenAc);\r\n  };\r\n  const authClose = () => {\r\n    setAuthVariant('');\r\n  };\r\n  useEffect(() => {\r\n    authVerif();\r\n  }, [authInfo.test_passed]);\r\n\r\n  return (\r\n    <div className=\"head\">\r\n      {authVariant\r\n        && (\r\n        <Authorization\r\n          infoTaked={infoTaked}\r\n          authClose={authClose}\r\n          authVariant={authVariant}\r\n        />\r\n        )\r\n      }\r\n      <Logo />\r\n      <div className=\"right_side burger_menu\" onClick={() => setMenuVisible(true)}>\r\n        <img src=\"https://img.icons8.com/color/48/000000/hamburger.png\"/>\r\n      </div>\r\n      <div className={classNames(\r\n        { 'head_menu': !menuVisible },\r\n        { 'head_menu_mobile': menuVisible },\r\n      )}>\r\n        <OutsideClickHandler onOutsideClick={() => setMenuVisible(false)}>\r\n          <div className=\"head_menu_list\">\r\n            <div className=\"head_list\">\r\n              {\r\n                pagesList.map((button) => (\r\n                  (token || button.access === 'free')\r\n                    && (\r\n                    <Link className=\"head_button\" key={button.name} to={button.link} onClick={() => setMenuVisible(false)}>\r\n                      {button.name}\r\n                    </Link>\r\n                    )\r\n                    || (\r\n                      <span\r\n                        role=\"button\"\r\n                        tabIndex={-3}\r\n                        className=\"head_button\"\r\n                        key={button.name}\r\n                        onClick={() => (setAuthVariant('something'))}\r\n                      >\r\n                        {button.name}\r\n                      </span>\r\n                    )\r\n                ))\r\n              }\r\n            </div>\r\n            <div className=\"right_side\">\r\n              <OutsideClickHandler onOutsideClick={() => setLangDisplay(false)}>\r\n                <div className=\"flags\">\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={-4}\r\n                    onClick={() => setLangDisplay(true)}\r\n                  >\r\n                    <img alt={t('flag')} className=\"flags_img\" src={t('flag')} />\r\n                  </div>\r\n                  {langDisplay && Object.keys(langs).map((lang) => (\r\n                    <div\r\n                      role=\"button\"\r\n                      tabIndex={-5}\r\n                      className=\"flag\"\r\n                      key={lang}\r\n                      onClick={() => i18n.changeLanguage(lang)}\r\n                    >\r\n                      <img alt={lang} className=\"flags_img\" src={langs[lang].img} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </OutsideClickHandler>\r\n              <div className=\"authentication\">\r\n                {(!token\r\n                  && (\r\n                  <>\r\n                    <div\r\n                      role=\"button\"\r\n                      tabIndex={-6}\r\n                      className=\"head_button\"\r\n                      onClick={() => (setAuthVariant('login'), setMenuVisible(false))}\r\n                    >\r\n                      {t('head.buttons.login')}\r\n                    </div>\r\n                    |\r\n                    <div\r\n                      role=\"button\"\r\n                      tabIndex={-7}\r\n                      className=\"head_button\"\r\n                      onClick={() => (setAuthVariant('registration'), setMenuVisible(false))}\r\n                    >\r\n                      {t('head.buttons.registration')}\r\n                    </div>\r\n                  </>\r\n                  )) || (\r\n                  <>\r\n                    <div>{authInfo.name}</div>\r\n                    |\r\n                    <div\r\n                      role=\"button\"\r\n                      tabIndex={-8}\r\n                      className=\"head_button\"\r\n                      onClick={() => ((\r\n                        localStorage.removeItem('token'),\r\n                        setToken(''),\r\n                        dispatch(userDeauth()),\r\n                        setMenuVisible(false)\r\n                      ))}\r\n                    >\r\n                      deactive\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </OutsideClickHandler>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './main.css';\r\n// import video from './videos/onFirstDays.mp4';\r\n\r\nconst Main = () => {\r\n  const multName = 'Futurama 1s 1s';\r\n  const registered = '666';\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <span className=\"mult_day\">\r\n        Multfilm of day:\r\n      </span>\r\n      <span className=\"mult_day\">\r\n        {multName}\r\n      </span>\r\n      {/* <iframe\r\n        className=\"main_video\"\r\n        title=\"main_video\"\r\n        src=\"https://www.youtube.com/embed/Zlmswo0S0e0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      /> */}\r\n      <p>\r\n        number of registered:\r\n        {registered}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Basement = () => {\r\n\r\n  return (\r\n    <div className=\"basement\">site basement</div>\r\n  )\r\n}\r\n\r\nexport default Basement","import { createSelector } from 'reselect';\r\nimport { AppState } from '../reducers/rootReducer';\r\n\r\nconst getMultfilms = (state: AppState) => state.multfilms.multfilms;\r\nconst getMultfilmsPending = (state: AppState) => state.multfilms.pending;\r\nconst getError = (state: AppState) => state.multfilms;\r\n\r\nexport const getMultfilmsSelector = createSelector(getMultfilms, (info) => info);\r\nexport const getMultfilmsPendingSelector = createSelector(getMultfilmsPending, (pending) => pending);\r\nexport const multfilmsErrorSelector = createSelector(getError, (error) => error);\r\n","import { createSelector } from 'reselect';\r\nimport { AppState } from '../reducers/rootReducer';\r\n\r\nconst getQuestions = (state: AppState) => state.questions.questions;\r\nconst getError = (state: AppState) => state.questions.error;\r\n\r\nexport const getQuestionsSelector = createSelector(getQuestions, (questions) => questions);\r\nexport const getQuestionsErrorSelector = createSelector(getError, (error) => error);","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './styles.css';\r\nimport { getQuestionsSelector } from '../../../../redux-saga/selectors/questionsSelector';\r\nimport { getAccountIdSelector } from '../../../../redux-saga/selectors/userSelector';\r\nimport { userTestingRequare } from '../../../../redux-saga/actions/userActions';\r\n\r\nconst Test = () => {\r\n  const questions = useSelector(getQuestionsSelector);\r\n  const userId = useSelector(getAccountIdSelector);\r\n  const [counter, setCounter] = useState(0);\r\n  const [answers, setAnswers] = useState<string[]>([]);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitQuestion = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (userAnswer === questions[counter].answer) {\r\n      setAnswers([questions[counter].multfilm, ...answers]);\r\n    }\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (counter === questions.length && counter !== 0) {\r\n      const answer = { features: answers, userId: userId };\r\n      dispatch(userTestingRequare(answer));\r\n    }\r\n  }, [counter]);\r\n\r\n  return (\r\n    <>\r\n      {counter < questions.length\r\n        && (\r\n        <form className=\"multTest_form\" onSubmit={(e) => submitQuestion(e)}>\r\n          <span className=\"test_text\">{questions[counter].question}</span>\r\n          <img alt={questions[counter].topic} className=\"test_image\" src={`${process.env.PUBLIC_URL}/assets/images/multTests/${questions[counter].image}`} />\r\n          <div className=\"test_answers\">\r\n            {questions[counter].answers.map(answer => (\r\n              <input className=\"test_answer\" key={answer} value={answer} type=\"submit\" onClick={() => setUserAnswer(answer)} />\r\n            ))}\r\n          </div>\r\n        </form>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;","import React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { Multfilm } from '../../../../../redux-saga/types/multfilmsTypes';\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n  multfilm: Multfilm,\r\n  viewedChange: (name:string) => void,\r\n}\r\n\r\nconst MultfilmBlock = (props: Props) => {\r\n\r\n  const multfilm = props.multfilm;\r\n\r\n  useEffect(() => {\r\n    !multfilm.viewed && props.viewedChange(multfilm.name), multfilm.viewed = true\r\n  }, [])\r\n\r\n  return (\r\n    <div className='multfilm_block' >\r\n      <div\r\n        className={classNames(\r\n          { 'multfilm_unviewed': !multfilm.viewed },\r\n          { 'multfilm_viewed': multfilm.viewed }\r\n        )}\r\n        style={{\r\n          animationDelay: `${multfilm.delay + 3}s`\r\n        }}\r\n      /> \r\n      {!multfilm.viewed\r\n        && <>\r\n          <div className=\"pour\" \r\n            style={{\r\n              animationDelay: `${multfilm.delay + 2}s`\r\n            }}\r\n          />\r\n          <div className=\"multfilm_locked multfilm_opened\" \r\n            style={{\r\n              animationDelay: `${multfilm.delay}s`\r\n            }}\r\n          />\r\n        </>\r\n      }\r\n      <div className=\"multfilm_list\">\r\n        {multfilm.watched\r\n          && <div className=\"multfilms_watched\" key={multfilm.name}/>\r\n        }\r\n        <Link className=\"multfilms_image_block\" to={`/progres/multfilm?name=${multfilm.name}`}>\r\n          <img\r\n            alt={multfilm.logo}\r\n            className=\"multfilms_list_logo\"\r\n            src={`${process.env.PUBLIC_URL}/assets/images/multPosters/${multfilm.logo}`}\r\n          />\r\n        </Link>\r\n        <span className=\"multfilm_name\">\r\n          {multfilm.name}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultfilmBlock","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMultfilmsSelector } from '../../../../redux-saga/selectors/multfilmsSelector';\r\nimport { getAccountIdSelector } from '../../../../redux-saga/selectors/userSelector';\r\nimport { viewedSaveRequest } from '../../../../redux-saga/actions/viewedActions';\r\nimport MultfilmBlock from './MultfilmBlock';\r\nimport './styles.css';\r\n\r\nconst Multfilms = () => {\r\n  const dispatch = useDispatch();\r\n  const multfilms = useSelector(getMultfilmsSelector);\r\n  const userId = useSelector(getAccountIdSelector);\r\n  let viewed: string[] = [];\r\n\r\n  const viewedChange = (name: string) => {\r\n    viewed.push(name)\r\n  };\r\n\r\n  useEffect(() => {\r\n    return function viewedSave() {\r\n      (viewed.length) && dispatch(viewedSaveRequest({userId, viewed}));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"multfilms\">\r\n      {Object.keys(multfilms).map((category) => (\r\n        <div key={category} className=\"multfilms_category\">\r\n          {multfilms[category].map((multfilm, index) => (\r\n            index === 0 || multfilms[category][index-1].watched ? (\r\n              <MultfilmBlock\r\n                multfilm={multfilm}\r\n                viewedChange={viewedChange}\r\n                key={multfilm.name}\r\n              />\r\n            ) :\r\n              <div key={multfilm.name} className=\"multfilm_block multfilm_locked\">\r\n              </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Multfilms;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './styles.css';\r\nimport { questionsTakeRequest } from '../../../redux-saga/actions/questionsActions';\r\nimport { getAccountPendingSelector, getAccountSelector } from '../../../redux-saga/selectors/userSelector';\r\nimport { getMultfilmsPendingSelector } from '../../../redux-saga/selectors/multfilmsSelector';\r\nimport Test from './Test';\r\nimport Multfilms from './Multfilms';\r\n\r\nconst Progres = () => {\r\n  const pendingAccount = useSelector(getAccountPendingSelector);\r\n  const pendingMultfilms = useSelector(getMultfilmsPendingSelector);\r\n  const authInfo = useSelector(getAccountSelector);\r\n  const dispatch = useDispatch();\r\n  const level = authInfo.involvement;\r\n\r\n  const getInfo = async () => {\r\n    if (authInfo.name && !authInfo.test_passed) {\r\n      const action = {level, topic: 'newcomers'}\r\n      dispatch(questionsTakeRequest(action));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, [authInfo.test_passed, authInfo.name]);\r\n\r\n  return (\r\n    <div>\r\n      {!pendingAccount && authInfo\r\n      && (\r\n        (!authInfo.name && <span>Ты не авторизован</span>)\r\n        || (!authInfo.test_passed && <Test />)\r\n        || (!pendingMultfilms\r\n          &&  <div className=\"multfilms_main\">\r\n                <Multfilms />\r\n              </div>\r\n            )\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progres;","import React from 'react';\r\nimport './aboutProject.css';\r\n\r\nconst AboutProject = () => {\r\n  const something = 'something';\r\n\r\n  return (\r\n    <div>\r\n      {something}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutProject;","import React from 'react';\r\n\r\nconst Setting = () => {\r\n  const settings = 'setting';\r\n\r\n  return (\r\n    <div>\r\n      {settings}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './styles.css';\r\n\r\ninterface Prop {\r\n  changeVisiter: () => void;\r\n}\r\n\r\nconst GreetNew = (props: Prop) => {\r\n  interface Select {\r\n    text: string,\r\n    image: string,\r\n    select: string,\r\n  }\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const chooser = [\r\n    {\r\n      text: 'text1',\r\n      image: 'https://i.ibb.co/1dyPjPX/first-List-Face-Up.png',\r\n      select: 'common',\r\n    },\r\n    {\r\n      text: 'text2',\r\n      image: 'https://i.ibb.co/0VfV5Hv/first-List-Futurama.png',\r\n      select: 'uncommon',\r\n    },\r\n    {\r\n      text: 'text3',\r\n      image: 'https://i.ibb.co/1fGdYLC/first-List-Watashi.png',\r\n      select: 'rare',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"greetNew\">\r\n      <div className=\"greetNew_page\">\r\n        <p>{t('greetNew.greet.string1')}</p>\r\n        <span>{t('greetNew.greet.string2')}</span>\r\n        <div className=\"greet_answers\">\r\n          {chooser.map((choose: Select) => (\r\n            <div\r\n              role=\"button\"\r\n              className=\"greet_answer\"\r\n              key={choose.select}\r\n              tabIndex={0}\r\n              onClick={() => ((props.changeVisiter(),\r\n              localStorage.setItem('involvement',\r\n                choose.select)\r\n              ))}\r\n            >\r\n              <div className=\"greet_answer_image_carcas\">\r\n                <img\r\n                  alt={choose.select}\r\n                  className=\"greet_answer_image\"\r\n                  src={choose.image}\r\n                />\r\n              </div>\r\n              <span className=\"greet_text\">{t(`greetNew.chooser.${choose.text}`)}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GreetNew;","import React from 'react';\r\n\r\nconst Multfilm = () => {\r\n  return (\r\n    <div>mult</div>\r\n  )\r\n}\r\n\r\nexport default Multfilm;","import React, { useState } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Main from './components/pages/Main';\r\nimport Basement from './components/Basement';\r\nimport Progres from './components/pages/Progres';\r\nimport AboutProject from './components/pages/AboutProject';\r\nimport Setting from './components/pages/Setting';\r\nimport GreetNew from './components/GreetNew';\r\nimport Multfilm from './components/pages/Progres/Multfilms/Multfilm';\r\n\r\nfunction App() {\r\n  const [visiter, setVisiter] = useState(localStorage.getItem('visiter'));\r\n\r\n  const changeVisiter = () => {\r\n    setVisiter('true');\r\n    localStorage.setItem('visiter', 'true');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(\r\n        visiter\r\n        && (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={() => <Main />} />\r\n            <Route exact path=\"/progres\" component={() => <Progres />} />\r\n            <Route path=\"/aboutProject\" component={() => <AboutProject />} />\r\n            <Route path=\"/setting\" component={() => <Setting />} />\r\n            <Route path=\"/progres/multfilm:name?\" component={() => <Multfilm />} />\r\n          </Switch>\r\n          <Basement />\r\n        </>\r\n        ))\r\n        || <GreetNew changeVisiter={changeVisiter} />\r\n      }\r\n\r\n      {/* dev time */}\r\n      <span>\r\n        visiter:\r\n        {localStorage.getItem('visiter')}\r\n        , involvement:\r\n        {localStorage.getItem('involvement')}\r\n      </span>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={() => ((localStorage.removeItem('visiter'),\r\n        localStorage.removeItem('involvement')))}\r\n      >\r\n        Чистим инфу о первом посещении\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './i18n';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux-saga/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Suspense fallback=\"...is loading\">\r\n    <BrowserRouter>\r\n      <CookiesProvider>\r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>\r\n      </CookiesProvider>\r\n    </BrowserRouter>\r\n  </Suspense>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}